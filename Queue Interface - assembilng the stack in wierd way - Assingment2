import java.util.ArrayDeque;
import java.util.Collections;
import java.util.Deque;

class Tester {

    public static Deque<Character> updateStack(Deque<Character> inputStack) {
		//Implement your logic here and change the return statement accordingly
		int n=1;
		Deque<Character> updated=new ArrayDeque<Character>();
		Deque<Character> updated1=new ArrayDeque<Character>();
		while (n<=3){
		    Character data=inputStack.pollLast();
		    updated.offer(data);
		    n++;
		}
		while(!updated.isEmpty()) {
		updated1.add(updated.pollLast());
		}
		updated1.addAll(inputStack);
		return updated1;
	}
	
	public static void main(String[] args) {
		
		Deque<Character> inputStack = new ArrayDeque<Character>();
		inputStack.push('E');
		inputStack.push('D');
		inputStack.push('C');
		inputStack.push('B');
		inputStack.push('A');
		
		Deque<Character> resultStack = updateStack(inputStack);
		
		System.out.println("The alphabets in updated stack are:");
		for(Character alphabet: resultStack)
		    System.out.println(alphabet);
	}
}
