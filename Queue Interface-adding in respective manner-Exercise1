import java.util.Deque;
import java.util.ArrayDeque;

class Tester {
    
    public static Deque<Object> mergeQueue(Deque<Integer> intQueue, Deque<Character> charQueue) {
		//Implement your logic here and change the return statement accordingly 
   	int max=0;
    	if (intQueue.size()>charQueue.size()) {
  		max=intQueue.size();
 		}else {
    			max=charQueue.size();
    		}    
    	Deque <Object> merge=new ArrayDeque<Object>();    	
    	while(max>0) {
    	Integer data1=intQueue.poll();
    	Character data2=charQueue.poll();
    	if(data1!=null && data2!=null) {
    		merge.add(data1);
    		merge.add(data2);
    		max-=1;
    	}else if(data1!=null && data2==null) {
    		merge.add(data1);
    		max-=1;
    	}else if(data1==null && data2!=null) {
    		merge.add(data2);
    		max-=1;
    	}
    	}
		return merge;
	}

	public static void main(String[] args) {
		
		Deque<Integer> integerQueue = new ArrayDeque<Integer>();
		integerQueue.add(3);
		integerQueue.add(6);
		integerQueue.add(9);
		
		Deque<Character> characterQueue = new ArrayDeque<Character>();
        characterQueue.add('a');
		characterQueue.add('e');
		characterQueue.add('i');
		characterQueue.add('o');
		characterQueue.add('u');
		characterQueue.add('b');
		
		Deque<Object> mergedQueue = mergeQueue(integerQueue, characterQueue);
		
		System.out.println("The elements in the merged queue are:");
		for(Object element: mergedQueue)
		    System.out.println(element);
	    
	}
}
